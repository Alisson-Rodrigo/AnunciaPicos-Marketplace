@page "/perfil"
<NavBar />
<body>
    <div class="container">
        <header class="header">
            <div class="header-content">
                <h1>Ol√°, <span id="user-name">Usu√°rio</span></h1>
                <div class="notification-only"></div>
            </div>
        </header>

        <div class="profile-container">
            <div class="profile-header">
                <div class="profile-image-container">
                    <div class="edit-image-overlay" id="edit-image-overlay" style="display: none;">
                        <button class="edit-image-btn" onclick="selecionarImagem()">Editar</button>
                        <input type="file" id="input-imagem" style="display: none;" accept="image/*" onchange="uploadImagem()" />
                    </div>
                </div>
                <div class="profile-info">
                    <h2 id="display-name">Nome do Usu√°rio</h2>
                    <p id="display-email">usuario@email.com</p>
                    <div style="display: flex; gap: 10px; flex-wrap: wrap;">
                        <button class="edit-profile-btn" onclick="habilitarEdicao()">Editar perfil</button>
                        <button class="edit-btn" onclick="mostrarProdutos()">Mostrar meus produtos</button>
                    </div>
                </div>
            </div>

            <div class="profile-form">
                <div class="form-row">
                    <div class="form-group full-width">
                        <label for="nome-completo">Nome completo</label>
                        <input type="text" id="nome-completo" placeholder="Seu nome completo" disabled />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group full-width">
                        <label for="cpf">CPF</label>
                        <input type="text" id="cpf" placeholder="Seu CPF" disabled />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group full-width">
                        <label for="phone">Telefone</label>
                        <input type="text" id="phone" placeholder="Seu telefone" disabled />
                    </div>
                </div>

                <div class="form-section">
                    <h3>Endere√ßo de e-mail:</h3>
                    <div class="email-item">
                        <div class="email-radio">
                            <input type="radio" name="email-principal" id="email-1" checked />
                            <label for="email-1" class="email-label">
                                <span class="email-text" id="email-text">usuario@email.com</span>
                               
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div id="produtos-container" style="margin-top: 30px; display: none;">
                <h2>Meus Produtos</h2>
                <div id="lista-produtos" style="display: grid; gap: 15px;"></div>
            </div>
        </div>
    </div>
<Footer /> 

<script>
let produtosVisiveis = false;


async function carregarPerfil() {
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get("token");

    if (!token) {
        console.error("Token n√£o encontrado na URL.");
        return;
    }

    let idUsuario = null;

    try {
        const payload = decodeJwt(token);
        idUsuario = payload["nameid"] || payload["sub"]; // nameid √© comum em tokens gerados pelo ASP.NET

        const response = await fetch("https://api.anunciapicos.shop/profile/perfil", {
            method: "GET",
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            }
        });

        if (!response.ok) {
            throw new Error(`Erro HTTP: ${response.status}`);
        }

        const data = await response.json();

        document.getElementById("user-name").textContent = data.name || "Usu√°rio";
        document.getElementById("display-name").textContent = data.name || "Nome do Usu√°rio";
        document.getElementById("display-email").textContent = data.email || "Email";
        document.getElementById("email-text").textContent = data.email || "Email";

        document.getElementById("nome-completo").value = data.name || "";
        document.getElementById("cpf").value = data.cpf || "";
        document.getElementById("phone").value = data.phone || "";

        if (data.imageProfile) {
            const imageContainer = document.querySelector(".profile-image-container");
            const existingImg = imageContainer.querySelector("img");
            if (existingImg) existingImg.remove();

            const imgElement = document.createElement("img");
            imgElement.src = data.imageProfile;
            imgElement.alt = `${data.name} - Imagem de perfil`;
            Object.assign(imgElement.style, {
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                objectFit: "cover",
                position: "absolute",
                top: "0",
                left: "0"
            });

            imageContainer.appendChild(imgElement);
        }

        window.produtosDoUsuario = data.products || [];

        // üî• NOVO: Carregar avalia√ß√µes do usu√°rio logado
        if (idUsuario) {
            await carregarAvaliacoes(idUsuario, token);
        }

    } catch (error) {
        console.error("Erro ao carregar perfil:", error);
    }
}

// üîç Decodifica o token JWT
function decodeJwt(token) {
    const payload = token.split('.')[1];
    const decoded = atob(payload.replace(/-/g, '+').replace(/_/g, '/'));
    return JSON.parse(decoded);
}

// üåü Nova fun√ß√£o para buscar e exibir avalia√ß√µes
async function carregarAvaliacoes(idUsuario, token) {
    const url = `https://api.anunciapicos.shop/evaluation/average/${idUsuario}`;

    try {
        const response = await fetch(url, {
            method: "GET",
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            }
        });

        if (!response.ok) {
            throw new Error(`Erro ao buscar avalia√ß√µes: ${response.status}`);
        }

        const media = await response.json();

        const container = document.getElementById("media-avaliacoes");

        if (media === 0 || media === null) {
            container.innerHTML = "Ainda n√£o h√° avalia√ß√µes.";
        } else {
            const estrelas = "‚òÖ".repeat(Math.round(media)) + "‚òÜ".repeat(5 - Math.round(media));
            container.innerHTML = `M√©dia: ${media.toFixed(1)} ${estrelas}`;
        }

    } catch (error) {
        console.error("Erro ao carregar avalia√ß√µes:", error);
        const container = document.getElementById("media-avaliacoes");
        container.innerHTML = "Erro ao carregar avalia√ß√µes.";
    }
}

document.addEventListener("DOMContentLoaded", carregarPerfil);

function mostrarProdutos() {
    const container = document.getElementById("produtos-container");
    const lista = document.getElementById("lista-produtos");

    if (!produtosVisiveis) {
        lista.innerHTML = "";

        if (!window.produtosDoUsuario || window.produtosDoUsuario.length === 0) {
            lista.innerHTML = "<p>Voc√™ ainda n√£o tem produtos cadastrados.</p>";
        } else {
            window.produtosDoUsuario.forEach(produto => {
                const imagem = produto.imageUrl?.[0] || "";

                const card = `
                    <div style="border: 1px solid #ccc; padding: 15px; border-radius: 8px;">
                        ${imagem ? `<img src="${imagem}" alt="${produto.name}" style="width: 100px; height: 100px; object-fit: cover;" />` : ""}
                        <h4>${produto.name}</h4>
                        <p>${produto.description}</p>
                        <strong>R$ ${produto.price.toFixed(2)}</strong>
                    </div>
                `;
                lista.innerHTML += card;
            });
        }

        container.style.display = "block";
        produtosVisiveis = true;
    } else {
        container.style.display = "none";
        produtosVisiveis = false;
    }
}

// Adicionar estilo para melhorar a apar√™ncia
document.addEventListener("DOMContentLoaded", function() {
    const style = document.createElement("style");
    style.textContent = `
        .profile-image-container {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background-color: #f0f0f0;
            position: relative;
            overflow: hidden;
        }
        
        .edit-image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none; /* Inicialmente escondido */
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }
        
        .edit-image-btn {
            background-color: #fff;
            color: #333;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
        }
    `;
    document.head.appendChild(style);
});

window.onload = carregarPerfil;
</script>
</body>