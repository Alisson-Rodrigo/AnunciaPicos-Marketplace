@page "/perfil"
<NavBar />
<body>
    <div class="container">
        <header class="header">
            <div class="header-content">
                <h1>Olá, <span id="user-name">Usuário</span></h1>
                <div class="notification-only"></div>
            </div>
        </header>

        <div class="profile-page-container">
            <!-- Menu Lateral -->
            <div class="sidebar-menu">
                <div class="profile-image-container">
                    <div class="edit-image-overlay" id="edit-image-overlay">
                        <input type="file" id="input-imagem" style="display: none;" accept="image/*" />
                    </div>
                </div>
                <div class="user-info">
                    <h3 id="sidebar-name">Nome do Usuário</h3>
                    <p id="sidebar-email">usuario@email.com</p>
                </div>
                <ul class="menu-options">
                    <li class="menu-item active" data-section="perfil" onclick="trocarSecao('perfil')">Perfil</li>
                    <li class="menu-item" data-section="editar-perfil" onclick="trocarSecao('editar-perfil')">Editar Perfil</li>
                    <li class="menu-item" data-section="meus-produtos" onclick="trocarSecao('meus-produtos')">Meus Produtos</li>
                </ul>
            </div>

            <!-- Conteúdo Principal -->
            <div class="main-content">
                <div class="content-section active" id="perfil-section">
                    <h2 class="section-title">Meu Perfil</h2>
                    <div class="profile-info-card">
                        <div class="info-row">
                            <label>Nome completo:</label>
                            <p id="info-nome-completo">-</p>
                        </div>
                        <div class="info-row">
                            <label>CPF:</label>
                            <p id="info-cpf">-</p>
                        </div>
                        <div class="info-row">
                            <label>Telefone:</label>
                            <p id="info-phone">-</p>
                        </div>
                        <div class="info-row">
                            <label>E-mail:</label>
                            <p id="info-email">-</p>
                        </div>
                    </div>
                </div>

                <div class="content-section" id="editar-perfil-section">
                    <h2 class="section-title">Editar Perfil</h2>
                    <div class="profile-form">
                        <div class="form-group">
                            <label for="nome-completo">Nome completo</label>
                            <input type="text" id="nome-completo" placeholder="Seu nome completo" />
                        </div>

                        <div class="form-group">
                            <label for="cpf">CPF</label>
                            <input type="text" id="cpf" disabled class="input-disabled" />
                        </div>

                        <div class="form-group">
                            <label for="phone">Telefone</label>
                            <input type="text" id="phone" placeholder="Seu telefone" />
                        </div>

                        <div class="form-group">
                            <label for="email-text">E-mail</label>
                            <input type="text" id="email-text" disabled class="input-disabled" />
                        </div>

                        <div class="form-group">
                            <label for="input-imagem-edicao">Nova imagem de perfil</label>
                            <div class="image-upload-container">
                                <input type="file" id="input-imagem-edicao" accept="image/*" onchange="mostrarPreviewImagem(this)" />
                                <div id="preview-text">Prévia da imagem:</div>
                                <div id="image-preview-container" class="image-preview">
                                    <img id="image-preview" src="" alt="Prévia da imagem" style="display: none;" />
                                    <div id="preview-placeholder">Selecione uma imagem para ver a prévia</div>
                                </div>
                            </div>
                        </div>

                        <div class="form-actions">
                            <button class="save-button" onclick="salvarAlteracoes()">Salvar alterações</button>
                            <button class="cancel-button" onclick="cancelarEdicao()">Cancelar</button>
                        </div>
                    </div>
                </div>

                <div class="content-section" id="meus-produtos-section">
                    <h2 class="section-title">Meus Produtos</h2>
                    <div id="lista-produtos" class="produtos-grid"></div>
                </div>
            </div>
        </div>
    </div>
</body>
<Footer />

<style>
    /* Estilo para o container de prévia de imagem */
    .image-upload-container {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 20px;
    }
    
    #preview-text {
        font-weight: bold;
        margin-top: 15px;
        color: #333;
    }
    
    .image-preview {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        border: 2px dashed #ccc;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        background-color: #f9f9f9;
        margin: 5px 0;
    }
    
    #image-preview {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    #preview-placeholder {
        font-size: 14px;
        color: #888;
        text-align: center;
        padding: 10px;
    }
    
    /* Estilos para a tabela de produtos */
    .produtos-table {
        width: 100%;
        border-collapse: collapse;
        font-family: Arial, sans-serif;
    }
    
    .produtos-table th {
        background-color: #f9f9f9;
        color: #555;
        font-weight: 600;
        text-align: left;
        padding: 15px;
        border-bottom: 1px solid #ddd;
    }
    
    .produtos-table td {
        padding: 15px;
        border-bottom: 1px solid #eee;
        vertical-align: middle;
    }
    
    .produto-info-container {
        display: flex;
        align-items: center;
        gap: 15px;
    }
    
    .produto-thumb {
        width: 60px;
        height: 60px;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .produto-thumb img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
    }
    
    .produto-sem-imagem {
        width: 60px;
        height: 60px;
        background: #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .produto-detalhes h4 {
        margin: 0 0 5px 0;
        font-size: 14px;
    }
    
    .produto-desc {
        margin: 0;
        font-size: 12px;
        color: #777;
    }
    
    .preco-col {
        font-weight: bold;
        color: #333;
    }
    
    .botoes-acao {
        display: flex;
        gap: 8px;
    }
    
    .btn-editar {
        background-color: #f59f42;
        color: white;
        border: none;
        padding: 8px 12px;
        cursor: pointer;
        font-weight: bold;
        font-size: 12px;
        border-radius: 4px;
    }
    
    .btn-deletar {
        background-color: white;
        color: #888;
        border: 1px solid #ddd;
        padding: 8px;
        cursor: pointer;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .btn-editar:hover {
        background-color: #e67e22;
    }
    
    .btn-deletar:hover {
        background-color: #f5f5f5;
    }
</style>

<script>
let dadosUsuario = {};
let produtosDoUsuario = [];

document.addEventListener("DOMContentLoaded", function() {
    carregarPerfil();
    
    // Adicionar listener para o input de imagem na edição de perfil
    const inputImagem = document.getElementById("input-imagem-edicao");
    if (inputImagem) {
        inputImagem.addEventListener("change", function() {
            mostrarPreviewImagem(this);
        });
    }
});

async function carregarPerfil() {
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get("token");

    if (!token) return;

    try {
        const payload = decodeJwt(token);
        const response = await fetch("https://api.anunciapicos.shop/profile/myprofile", {
            method: "GET",
            headers: { "Authorization": `Bearer ${token}` }
        });

        if (!response.ok) throw new Error(`Erro HTTP: ${response.status}`);
        const data = await response.json();
        dadosUsuario = data;
        produtosDoUsuario = data.products || [];

        atualizarDadosInterface(data);
        carregarProdutos();

    } catch (error) {
        console.error("Erro ao carregar perfil:", error);
    }
}

function atualizarDadosInterface(data) {
    // Atualizar texto do perfil
    document.getElementById("user-name").textContent = data.name || "Usuário";
    document.getElementById("sidebar-name").textContent = data.name || "Nome do Usuário";
    document.getElementById("sidebar-email").textContent = data.email || "usuario@email.com";

    document.getElementById("info-nome-completo").textContent = data.name || "-";
    document.getElementById("info-cpf").textContent = data.cpf || "-";
    document.getElementById("info-phone").textContent = data.phone || "-";
    document.getElementById("info-email").textContent = data.email || "-";

    // Preencher campos do formulário de edição
    document.getElementById("nome-completo").value = data.name || "";
    document.getElementById("cpf").value = data.cpf || "";
    document.getElementById("phone").value = data.phone || "";
    document.getElementById("email-text").value = data.email || "";
}

function carregarProdutos() {
    const listaProdutos = document.getElementById("lista-produtos");
    if (!listaProdutos) return;

    if (produtosDoUsuario.length === 0) {
        listaProdutos.innerHTML = "<p>Você não tem produtos cadastrados.</p>";
        return;
    }

    let html = `<table class="produtos-table">
        <thead>
            <tr>
                <th>Produto</th>
                <th>Preço</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>`;

    produtosDoUsuario.forEach(produto => {
        html += `
            <tr>
                <td>
                    <div class="produto-info-container">
                        <div class="produto-thumb">
                            ${produto.product_images && produto.product_images.length > 0 
                                ? `<img src="${produto.product_images[0].url}" alt="Imagem do produto" />`
                                : `<div class="produto-sem-imagem">SEM IMAGEM</div>`
                            }
                        </div>
                        <div class="produto-detalhes">
                            <h4>${produto.name}</h4>
                            <p class="produto-desc">${produto.description || ''}</p>
                        </div>
                    </div>
                </td>
                <td class="preco-col">${produto.price ? `R$ ${produto.price.toFixed(2)}` : "R$ 0,00"}</td>
                <td class="botoes-acao">
                    <button class="btn-editar" onclick="editarProduto(${produto.id})">Editar</button>
                    <button class="btn-deletar" onclick="deletarProduto(${produto.id})">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                            <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                        </svg>
                    </button>
                </td>
            </tr>`;
    });

    html += "</tbody></table>";
    listaProdutos.innerHTML = html;
}

function editarProduto(id) {
    // Redireciona para a página de edição, passando o id do produto na URL
    window.location.href = `/editarproduto?id=${id}`;
}

function deletarProduto(id) {
    // Implementação da função de deletar (pode ser adicionada depois)
    alert(`Deletar produto com ID: ${id}`);
}

function mostrarPreviewImagem(input) {
    const preview = document.getElementById("image-preview");
    const placeholder = document.getElementById("preview-placeholder");

    if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
            preview.src = e.target.result;
            preview.style.display = "block";
            placeholder.style.display = "none";
        };
        reader.readAsDataURL(input.files[0]);
    } else {
        preview.src = "";
        preview.style.display = "none";
        placeholder.style.display = "block";
    }
}

function salvarAlteracoes() {
    // Função para salvar alterações do perfil (implemente conforme sua API)
    alert("Salvar alterações ainda não implementado.");
}

function cancelarEdicao() {
    // Cancelar edição, volta para seção perfil
    trocarSecao("perfil");
}

function trocarSecao(secao) {
    const secoes = document.querySelectorAll(".content-section");
    secoes.forEach(s => s.classList.remove("active"));

    const menuItems = document.querySelectorAll(".menu-item");
    menuItems.forEach(item => item.classList.remove("active"));

    const secaoSelecionada = document.getElementById(`${secao}-section`);
    if (secaoSelecionada) secaoSelecionada.classList.add("active");

    // Ativa o menu lateral correspondente
    menuItems.forEach(item => {
        if (item.dataset.section === secao) {
            item.classList.add("active");
        }
    });
}

function decodeJwt(token) {
    try {
        const base64Url = token.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));
        return JSON.parse(jsonPayload);
    } catch (e) {
        console.error("Token JWT inválido:", e);
        return {};
    }
}
</script>
